/*
 * Copyright (c) 2016 iWave Systems Technologies Pvt. Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;
#include "r8a7745.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	model = "iwg22m";
	compatible = "iw,iwg22m", "renesas,r8a7745";

	aliases {
		serial3 = &scif4;
	};

	memory@40000000 {
		device_type = "memory";
		reg = <0 0x40000000 0 0x20000000>;
	};

	leds {
		compatible = "gpio-leds";
		led1 {
			gpios = <&gpio0 29 GPIO_ACTIVE_HIGH>;
		};
		led2 {
			gpios = <&gpio1 18 GPIO_ACTIVE_HIGH>;
		};
		led3 {
			gpios = <&gpio5 7 GPIO_ACTIVE_HIGH>;
		};
		led4 {
			gpios = <&gpio5 8 GPIO_ACTIVE_HIGH>;
		};
	};

	reg_3p3v: 3p3v {
		compatible = "regulator-fixed";
		regulator-name = "3P3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vcc_lcd: regulator@4 {
		compatible = "regulator-fixed";

		regulator-name = "panel vcc";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&tpu 3 5000000 GPIO_ACTIVE_LOW>;
		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <7>;
		pinctrl-0 = <&backlight_pins>;
		pinctrl-names = "default";
	};

	lcd@20 {
		compatible = "edt,et043080dh6-gp", "simple-panel";
		power-supply = <&vcc_lcd>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				#address-cells = <1>;
				#size-cells = <0>;

				reg = <0>;
				lcd_in: endpoint {
					reg = <0>;
					remote-endpoint = <&du_out_rgb0>;
				};
			};

		};
	};

	x2_clk: x2-clock {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <10800000>;
	};
};

&extal_clk {
	clock-frequency = <20000000>;
};

&pfc {
	scif4_pins: serial3 {
			renesas,groups = "scif4_data_b";
			renesas,function = "scif4";
	};

	mmcif0_pins: mmcif0 {
		renesas,groups = "mmc_data8", "mmc_ctrl";
		renesas,function = "mmc";
	};

	pwm1_pins: pwm1 {
		renesas,groups = "pwm1_c";
		renesas,function = "pwm1";
	};

	i2c3_pins: i2c3 {
		renesas,groups = "i2c3_b";
		renesas,function = "i2c3";
	};

	i2c5_pins: i2c5 {
		renesas,groups = "i2c5";
		renesas,function = "i2c5";
	};

	stmp_pins: stmpe811 {
		renesas,groups = "intc_irq0";
		renesas,function = "intc";
	};

	backlight_pins: backlight {
		renesas,groups = "tpu_to3";
		renesas,function = "tpu";
	};

	du0_pins: du0 {
		renesas,groups = "du0_rgb888", "du0_sync", "du0_disp",
				"du0_clk0_out";
		renesas,function = "du0";
	};

	vin1_pins: vin1 {
		renesas,groups = "vin1_data8", "vin1_sync", "vin1_clk";
		renesas,function = "vin1";
	};

	can0_pins: can0 {
		renesas,groups = "can0";
		renesas,function = "can0";
	};

	can1_pins: can1 {
		renesas,groups = "can1";
		renesas,function = "can1";
	};

};

&i2c3 {
	pinctrl-0 = <&i2c3_pins>;
	pinctrl-names = "default";

	status = "okay";
	clock-frequency = <400000>;

	rtc@68 {
		compatible = "bq32000";
		reg = <0x68>;
	};
};

&i2c5 {
	pinctrl-0 = <&i2c5_pins>;
	pinctrl-names = "default";

	status = "okay";
	clock-frequency = <100000>;

	/* STMPE811 touch screen controller */
	stmpe811@44 {
		compatible = "st,stmpe811";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x44>;
		interrupt-parent = <&irqc0>;
		interrupts = <0 IRQ_TYPE_LEVEL_LOW>;
		pinctrl-0 = <&stmp_pins>;
		pinctrl-names = "default";
		id = <0>;
		blocks = <0x5>;
		irq-trigger = <0x1>;

		stmpe_touchscreen {
			compatible = "st,stmpe-ts";
				reg = <0>;
				/* 3.25 MHz ADC clock speed */
				st,adc-freq = <3>;
				/* 8 sample average control */
				st,ave-ctrl = <2>;
				/* 7 length fractional part in z */
				st,fraction-z = <7>;
				/*
				* 50 mA typical 80 mA max touchscreen drivers
				* current limit value
				*/
				st,i-drive = <0>;
				/* 12-bit ADC */
				st,mod-12b = <1>;
				/* internal ADC reference */
				st,ref-sel = <0>;
				/* ADC converstion time: 80 clocks */
				st,sample-time = <4>;
				/* 1 ms panel driver settling time */
				st,settling = <3>;
				/* 5 ms touch detect interrupt delay */
				st,touch-det-delay = <4>;
		};
	};

	ov7725@21 {
		compatible = "ov772x";
		reg = <0x21>;
		remote = <&vin1>;

		port {
			ov7725: endpoint {
				bus-width = <8>;
				pclk-sample = <1>;
				remote-endpoint = <&vin1ep>;
			};
		};
	};
};

&pwm1 {
	pinctrl-0 = <&pwm1_pins>;
	pinctrl-names = "default";

	status = "okay";
};

&scif4 {
	pinctrl-0 = <&scif4_pins>;
	pinctrl-names = "default";

	status = "okay";
};

&mmcif0 {
	pinctrl-0 = <&mmcif0_pins>;
	pinctrl-names = "default";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&reg_3p3v>;
	bus-width = <8>;
	non-removable;
        mmc-rst-gpio = <&gpio3 26 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

&tpu {
	status = "okay";
};

&can0 {
	pinctrl-0 = <&can0_pins>;
	pinctrl-names = "default";
	renesas,can-clock-select = <0x0>;
	status = "okay";
};

&can1 {
	pinctrl-0 = <&can1_pins>;
	pinctrl-names = "default";
	renesas,can-clock-select = <0x0>;
	status = "okay";
};

&gpio4 {
	can0-trx-en-gpio{
		gpio-hog;
		gpios = <2 GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "can0-trx-en-gpio";
	};

	can1-trx-en-gpio{
		gpio-hog;
		gpios = <10 GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "can1-trx-en-gpio";
	};
};

&gpio1 {
	lcd-power-eb-gpio{
		gpio-hog;
		gpios = <13 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "lcd-power-eb-gpio";
	};
};

&du {
	pinctrl-0 = <&du0_pins>;
	pinctrl-names = "default";
	status = "okay";

	clocks = <&mstp7_clks R8A7745_CLK_DU0>,
		<&mstp7_clks R8A7745_CLK_DU1>,
		<&x2_clk>;
	clock-names = "du.0","du.1","dclkin.0";

	ports {
		port@0 {
			endpoint {
				remote-endpoint = <&lcd_in>;
			};
		};
	};
};

&vin1 {
	status = "okay";
	pinctrl-0 = <&vin1_pins>;
	pinctrl-names = "default";

	port {
		#address-cells = <1>;
		#size-cells = <0>;

		vin1ep: endpoint {
			remote-endpoint = <&ov7725>;
			bus-width = <8>;
		};
	};
};

&usbphy {
       status = "okay";
};

&pci1 {
       status = "okay";
};
